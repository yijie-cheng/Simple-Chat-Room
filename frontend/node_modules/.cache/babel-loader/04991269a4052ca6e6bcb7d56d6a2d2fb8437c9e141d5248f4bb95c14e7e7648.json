{"ast":null,"code":"var _jsxFileName = \"/Users/chengyijie/Downloads/github_collection/simple-chat-room/frontend/src/containers/hooks/useChat.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect, useRef } from \"react\";\nimport { message as antMessage } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCALSTORAGE_KEY = \"save-me\";\nconst savedMe = localStorage.getItem(LOCALSTORAGE_KEY);\nconst ChatContext = /*#__PURE__*/createContext({\n  status: {},\n  me: \"\",\n  signedIn: false,\n  messages: [],\n  msgSent: false,\n  sendMessage: () => {},\n  clearMessages: () => {}\n});\nconst ChatProvider = props => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [status, setStatus] = useState({});\n  const [me, setMe] = useState(savedMe || '');\n  const [signedIn, setSignedIn] = useState(false);\n  const [msgSent, setMsgSent] = useState(false);\n  const ws = useRef(null);\n  useEffect(() => {\n    ws.current = new WebSocket('ws://localhost:4000');\n    ws.current.onmessage = byteString => {\n      const {\n        data\n      } = byteString;\n      const [task, payload] = JSON.parse(data);\n      switch (task) {\n        case \"output\":\n          {\n            console.log(\"output\");\n            setMessages(prevMessages => [...prevMessages, ...payload]);\n            setMsgSent(true);\n            break;\n          }\n        case \"status\":\n          {\n            setStatus(payload);\n            break;\n          }\n        case \"init\":\n          {\n            setMessages(payload);\n            break;\n          }\n        case \"cleared\":\n          {\n            setMessages([]);\n            break;\n          }\n        default:\n          break;\n      }\n    };\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, []);\n  const sendData = data => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify(data));\n    }\n  };\n  const sendMessage = payload => {\n    console.log(payload);\n    sendData([\"input\", payload]);\n  };\n  const clearMessages = () => {\n    sendData([\"clear\"]);\n  };\n  const displayStatus = s => {\n    if (s.msg) {\n      const {\n        type,\n        msg\n      } = s;\n      const content = {\n        content: msg,\n        duration: 0.5\n      };\n      switch (type) {\n        case \"success\":\n          antMessage.success(content);\n          break;\n        case \"error\":\n        default:\n          antMessage.error(content);\n          break;\n      }\n    }\n  };\n  useEffect(() => {\n    if (signedIn) {\n      localStorage.setItem(LOCALSTORAGE_KEY, me);\n    }\n  }, [signedIn, me]);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      status,\n      me,\n      signedIn,\n      messages,\n      msgSent,\n      setMe,\n      setSignedIn,\n      setMessages,\n      setMsgSent,\n      sendMessage,\n      clearMessages,\n      displayStatus\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatProvider, \"o5ZZQbrHNklsRcnsjPommIxYvm8=\");\n_c = ChatProvider;\nconst useChat = () => {\n  _s2();\n  return useContext(ChatContext);\n};\n_s2(useChat, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { ChatProvider, useChat };\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useRef","message","antMessage","jsxDEV","_jsxDEV","LOCALSTORAGE_KEY","savedMe","localStorage","getItem","ChatContext","status","me","signedIn","messages","msgSent","sendMessage","clearMessages","ChatProvider","props","_s","setMessages","setStatus","setMe","setSignedIn","setMsgSent","ws","current","WebSocket","onmessage","byteString","data","task","payload","JSON","parse","console","log","prevMessages","close","sendData","readyState","OPEN","send","stringify","displayStatus","s","msg","type","content","duration","success","error","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useChat","_s2","$RefreshReg$"],"sources":["/Users/chengyijie/Downloads/github_collection/simple-chat-room/frontend/src/containers/hooks/useChat.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect, useRef } from \"react\";\nimport { message as antMessage } from \"antd\";\n\nconst LOCALSTORAGE_KEY = \"save-me\";\nconst savedMe = localStorage.getItem(LOCALSTORAGE_KEY);\n\nconst ChatContext = createContext({\n  status: {},\n  me: \"\",\n  signedIn: false,\n  messages: [],\n  msgSent: false,\n  sendMessage: () => {},\n  clearMessages: () => {},\n});\n\nconst ChatProvider = (props) => {\n  const [messages, setMessages] = useState([]);\n  const [status, setStatus] = useState({});\n  const [me, setMe] = useState(savedMe || '');\n  const [signedIn, setSignedIn] = useState(false);\n  const [msgSent, setMsgSent] = useState(false);\n  const ws = useRef(null);\n\n  useEffect(() => {\n    ws.current = new WebSocket('ws://localhost:4000');\n\n    ws.current.onmessage = (byteString) => {\n      const { data } = byteString;\n      const [task, payload] = JSON.parse(data);\n      switch (task) {\n        case \"output\": {\n          console.log(\"output\");\n          setMessages(prevMessages => [...prevMessages, ...payload]);\n          setMsgSent(true);\n          break;\n        }\n        case \"status\": {\n          setStatus(payload);\n          break;\n        }\n        case \"init\": {\n          setMessages(payload);\n          break;\n        }\n        case \"cleared\": {\n          setMessages([]);\n          break;\n        }\n        default: break;\n      }\n    };\n\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, []);\n\n  const sendData = (data) => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify(data));\n    }\n  };\n\n  const sendMessage = (payload) => {\n    console.log(payload);\n    sendData([\"input\", payload]);\n  };\n\n  const clearMessages = () => {\n    sendData([\"clear\"]);\n  };\n\n  const displayStatus = (s) => {\n    if (s.msg) {\n      const { type, msg } = s;\n      const content = {\n        content: msg,\n        duration: 0.5,\n      };\n      switch (type) {\n        case \"success\":\n          antMessage.success(content);\n          break;\n        case \"error\":\n        default:\n          antMessage.error(content);\n          break;\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (signedIn) {\n      localStorage.setItem(LOCALSTORAGE_KEY, me);\n    }\n  }, [signedIn, me]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        status,\n        me,\n        signedIn,\n        messages,\n        msgSent,\n        setMe,\n        setSignedIn,\n        setMessages,\n        setMsgSent,\n        sendMessage,\n        clearMessages,\n        displayStatus,\n      }}\n      {...props}\n    />\n  );\n};\n\nconst useChat = () => useContext(ChatContext);\n\nexport { ChatProvider, useChat };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}